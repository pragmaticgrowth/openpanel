[phases.setup]
aptPkgs = [
  "python3",
  "build-essential",
  "make",
  "gcc",
  "g++",
  "nodejs",
  "openssl"
]

[phases.install]
cmds = [
  "npm install -g corepack@0.24.1",
  "corepack enable",
  "pnpm install --frozen-lockfile"
]

[phases.build]
cmds = [
  # Create env file with Railway variables
  "echo 'NODE_ENV=production' > .env",
  "echo 'SELF_HOSTED=true' >> .env",
  "echo 'GEO_IP_HOST=http://op-geo:8080' >> .env",
  "echo 'BATCH_SIZE=${BATCH_SIZE}' >> .env",
  "echo 'BATCH_INTERVAL=${BATCH_INTERVAL}' >> .env",
  "echo 'REDIS_URL=${REDIS_URL}' >> .env",
  "echo 'CLICKHOUSE_URL=${CLICKHOUSE_URL}' >> .env",
  "echo 'DATABASE_URL=${DATABASE_URL}' >> .env",
  "echo 'DATABASE_URL_DIRECT=${DATABASE_URL_DIRECT}' >> .env",
  "echo 'NEXT_PUBLIC_DASHBOARD_URL=https://${RAILWAY_PUBLIC_DOMAIN}' >> .env",
  "echo 'NEXT_PUBLIC_API_URL=https://${RAILWAY_PUBLIC_DOMAIN}/api' >> .env",
  "echo 'COOKIE_SECRET=${RESEND_API_KEY}' >> .env",
  # Run migrations and build
  "pnpm db:codegen",
  "pnpm --filter db run migrate:deploy:db",
  "pnpm --filter db run migrate:deploy:ch",
  "pnpm --filter api run build",
  "pnpm --filter public run build"
]

[phases.start]
cmd = "pnpm --filter api start:prod"

[nixpacks]
node-version = "18"
plan = [
  "web"
]